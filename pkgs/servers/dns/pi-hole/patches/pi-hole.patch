diff --git a/advanced/Scripts/chronometer.sh b/advanced/Scripts/chronometer.sh
index 1a4ce99..7b14109 100755
--- a/advanced/Scripts/chronometer.sh
+++ b/advanced/Scripts/chronometer.sh
@@ -13,7 +13,7 @@ LC_NUMERIC=C
 
 # Retrieve stats from FTL engine
 pihole-FTL() {
-    ftl_port=$(cat /var/run/pihole-FTL.port 2> /dev/null)
+    ftl_port=$(cat /var/run/pihole/ftl.port 2> /dev/null)
     if [[ -n "$ftl_port" ]]; then
         # Open connection to FTL
         exec 3<>"/dev/tcp/127.0.0.1/$ftl_port"
diff --git a/gravity.sh b/gravity.sh
index ff0343e..6bd19ee 100755
--- a/gravity.sh
+++ b/gravity.sh
@@ -21,7 +21,8 @@ source "${regexconverter}"
 basename="pihole"
 PIHOLE_COMMAND="/usr/local/bin/${basename}"
 
-piholeDir="/etc/${basename}"
+piholeDir="/var/lib/pihole"
+configDir="/etc/${basename}"
 
 adListFile="${piholeDir}/adlists.list"
 adListDefault="${piholeDir}/adlists.default"
@@ -49,7 +50,7 @@ resolver="pihole-FTL"
 haveSourceUrls=true
 
 # Source setupVars from install script
-setupVars="${piholeDir}/setupVars.conf"
+setupVars="${configDir}/setupVars.conf"
 if [[ -f "${setupVars}" ]];then
   source "${setupVars}"
 
@@ -69,7 +70,7 @@ else
 fi
 
 # Source pihole-FTL from install script
-pihole_FTL="${piholeDir}/pihole-FTL.conf"
+pihole_FTL="${configDir}/pihole-FTL.conf"
 if [[ -f "${pihole_FTL}" ]]; then
   source "${pihole_FTL}"
 fi
@@ -79,7 +80,7 @@ if [[ -z "${BLOCKINGMODE}" ]] ; then
 fi
 
 # Determine if superseded pihole.conf exists
-if [[ -r "${piholeDir}/pihole.conf" ]]; then
+if [[ -r "${configDir}/pihole.conf" ]]; then
   echo -e "  ${COL_LIGHT_RED}Ignoring overrides specified within pihole.conf! ${COL_NC}"
 fi
 
diff --git a/manpages/pihole.8 b/manpages/pihole.8
index bd7d093..1b4282e 100644
--- a/manpages/pihole.8
+++ b/manpages/pihole.8
@@ -182,12 +182,12 @@ Available commands and options:
 
 	(Logging options):
 .br
-      on                Enable the Pi-hole log at /var/log/pihole.log
+      on                Enable the Pi-hole log at /var/log/pihole/pihole.log
 .br
       off               Disable and flush the Pi-hole log at
-                        /var/log/pihole.log
+                        /var/log/pihole/pihole.log
 .br
-      off noflush       Disable the Pi-hole log at /var/log/pihole.log
+      off noflush       Disable the Pi-hole log at /var/log/pihole/pihole.log
 .br
 
 \fB-up, updatePihole\fR [--check-only]
diff --git a/pihole b/pihole
index 84a5623..d8b9eb9 100755
--- a/pihole
+++ b/pihole
@@ -21,7 +21,7 @@ setupVars="/etc/pihole/setupVars.conf"
 readonly colfile="${PI_HOLE_SCRIPT_DIR}/COL_TABLE"
 source "${colfile}"
 
-resolver="pihole-FTL"
+resolver="pi-hole-ftl.service"
 
 webpageFunc() {
   source "${PI_HOLE_SCRIPT_DIR}/webpage.sh"
@@ -103,7 +103,7 @@ restartDNS() {
   # Determine if we should reload or restart restart
   if [[ "${svcOption}" =~ "reload" ]]; then
     # Using SIGHUP will NOT re-read any *.conf files
-    svc="killall -s SIGHUP ${resolver}"
+    svc="systemctl kill -s SIGHUP ${resolver}"
   else
     # Get PID of resolver to determine if it needs to start or restart
     if pidof pihole-FTL &> /dev/null; then
@@ -111,7 +111,7 @@ restartDNS() {
     else
       svcOption="start"
     fi
-    svc="service ${resolver} ${svcOption}"
+    svc="systemctl restart ${resolver}"
   fi
 
   # Print output to Terminal, but not to Web Admin
@@ -227,9 +227,9 @@ Example: 'pihole logging on'
 Specify whether the Pi-hole log should be used
 
 Options:
-  on                  Enable the Pi-hole log at /var/log/pihole.log
-  off                 Disable and flush the Pi-hole log at /var/log/pihole.log
-  off noflush         Disable the Pi-hole log at /var/log/pihole.log"
+  on                  Enable the Pi-hole log at /var/log/pihole/pihole.log
+  off                 Disable and flush the Pi-hole log at /var/log/pihole/pihole.log
+  off noflush         Disable the Pi-hole log at /var/log/pihole/pihole.log"
     exit 0
   elif [[ "${1}" == "off" ]]; then
     # Disable logging
@@ -311,7 +311,7 @@ tailFunc() {
   # Colour blocklist/blacklist/wildcard entries as red
   # Colour A/AAAA/DHCP strings as white
   # Colour everything else as gray
-  tail -f /var/log/pihole.log | sed -E \
+  tail -f /var/log/pihole/pihole.log | sed -E \
     -e "s,($(date +'%b %d ')| dnsmasq[.*[0-9]]),,g" \
     -e "s,(.*(gravity.list|black.list|regex.list| config ).* is (0.0.0.0|::|NXDOMAIN|${IPV4_ADDRESS%/*}|${IPV6_ADDRESS:-NULL}).*),${COL_RED}&${COL_NC}," \
     -e "s,.*(query\\[A|DHCP).*,${COL_NC}&${COL_NC}," \
@@ -431,17 +431,6 @@ case "${1}" in
   "-h" | "help" | "--help"      ) helpFunc;;
 esac
 
-# Must be root to use this tool
-if [[ ! $EUID -eq 0 ]];then
-  if [[ -x "$(command -v sudo)" ]]; then
-    exec sudo bash "$0" "$@"
-    exit $?
-  else
-    echo -e "  ${CROSS} sudo is needed to run pihole commands.  Please run this script as root or install sudo."
-    exit 1
-  fi
-fi
-
 # Handle redirecting to specific functions based on arguments
 case "${1}" in
   "-w" | "whitelist"            ) listFunc "$@";;
diff --git a/setup.py b/setup.py
index 0e393bc..5c2007a 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,5 @@
 from setuptools import setup
 
 setup(
-    setup_requires=['pytest-runner'],
     tests_require=['pytest'],
 )
